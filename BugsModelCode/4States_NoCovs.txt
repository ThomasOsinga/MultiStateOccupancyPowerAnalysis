
model {
  # Priors
  psi ~ dunif(0, 1)      # Prob. of any occupation
  R1 ~  dunif(0, 1)       # Prob. of exactly 1 calf given occupation
  R2 ~  dunif(0, 1)       # Prob. of >2 calves given occupation and 1 calf
  
  p11 ~ dunif(0, 1)       # Detection prob for sites with no calves
  lp21 ~ dnorm(0, 0.1) # Logit-transformed prob for detection as no calf, given 1 calf
  lp22 ~ dnorm(0, 0.1) # Logit-transformed prob for correct detection, given 1 calf
  lp31 ~ dnorm(0, 0.1) # Logit-transformed prob for detection as no calf, given >2 calves
  lp32 ~ dnorm(0, 0.1) # Logit-transformed prob for detection as 1 calf, given >2 calves
  lp33 ~ dnorm(0, 0.1) # Logit-transformed prob for correct detection, given >2 calves
  
  # Transforming logit probabilities to standard probabilities
  p21 <- exp(lp21) / (1 + exp(lp21) + exp(lp22))
  p22 <- exp(lp22) / (1 + exp(lp21) + exp(lp22))
  p31 <- exp(lp31) / (1 + exp(lp31) + exp(lp32) + exp(lp33))
  p32 <- exp(lp32) / (1 + exp(lp31) + exp(lp32) + exp(lp33))
  p33 <- exp(lp33) / (1 + exp(lp31) + exp(lp32) + exp(lp33))
  
  # Define initial state vector (Omega)
    Omega[1] <- 1 - psi                                 # Prob. of unoccupied
    Omega[2] <- psi * (1 - (R1))                     # Prob. of occupancy w/o calves
    Omega[3] <- psi * R1 * (1 - R2)               # Prob. of occupancy with 1 calf
    Omega[4] <- psi * R1 * R2                       # Prob. of occupancy with >2 calves
  
  # Define observation matrix (Theta)
  # Order of indices: true state, observed state
  Theta[1,1] <- 1
  Theta[1,2] <- 0
  Theta[1,3] <- 0
  Theta[1,4] <- 0
  Theta[2,1] <- 1 - p11
  Theta[2,2] <- p11
  Theta[2,3] <- 0
  Theta[2,4] <- 0
  Theta[3,1] <- 1 - (p21 + p22)
  Theta[3,2] <- p21
  Theta[3,3] <- p22
  Theta[3,4] <- 0
  Theta[4,1] <- 1 - (p31 + p32 + p33) 
  Theta[4,2] <- p31
  Theta[4,3] <- p32
  Theta[4,4] <- p33  
  
  # State-space likelihood
  # State equation: model of true states (z)
  for (i in 1:nsites) {
    z[i] ~ dcat(Omega[])
  }
  
  # Observation equation
  for (i in 1:nsites) {
    for (j in 1:nsurveys) {
      y[i,j] ~ dcat(Theta[z[i],])
    }
  }
  
  # Derived quantities
  for (i in 1:nsites) {
    occ1[i] <- equals(z[i], 1)
    occ2[i] <- equals(z[i], 2)
    occ3[i] <- equals(z[i], 3)
    occ4[i] <- equals(z[i], 4)
  }
  n.occ[1] <- sum(occ1[]) # Sites in state 1 (Unoccupied)
  n.occ[2] <- sum(occ2[]) # Sites in state 2 (Occupied w/o calves)
  n.occ[3] <- sum(occ3[]) # Sites in state 3 (Occupied with 1 calf)
  n.occ[4] <- sum(occ4[]) # Sites in state 4 (Occupied with >2 calves)
}