
model {
 # Model for the logit of the occupancy probabilities
  for (i in 1:nsites) {
    
    logit(psi[i]) <-   beta0[1,1] 
                     + beta1[1,1] * Fdens[i]
                      # Occupied

    logit(R1[i]) <-    beta0[2,1] 
                     + beta1[2,1] * Fdens[i] 
                      # Occupied with 1 calf

    logit(R2[i]) <-    beta0[3,1] 
                     + beta1[3,1] * Fdens[i] 
                # Occupied with multiple calves


  }


   # Priors for occupancy model coefficients - intercept and slope for forest (Need another beta for each parameter,
   #so if we want squared function it will be beta0[i,k], beta1[i,k] where k is the covariate 
   #and i the state so it will always be 1:3 whereas k will be 1:length(covariates) 
for (k in 1:1) {
  for (i in 1:3){               

    beta0[i,k] ~ dnorm(0, 0.01)     
    beta1[i,k] ~ dnorm(0, 0.01)
  }
}


  # (2) Observation process
  # Linear models in observation process
  p1 ~ dunif(0, 1)       # Detection prob for sites with no calves
  lp21 ~ dnorm(0, 0.001) # Logit-transformed prob for detection as no calf, given 1 calf
  lp22 ~ dnorm(0, 0.001) # Logit-transformed prob for correct detection, given 1 calf
  lp31 ~ dnorm(0, 0.001) # Logit-transformed prob for detection as no calf, given >2 calves
  lp32 ~ dnorm(0, 0.001) # Logit-transformed prob for detection as 1 calf, given >2 calves
  lp33 ~ dnorm(0, 0.001) # Logit-transformed prob for correct detection, given >2 calves
  
  # Transforming logit probabilities to standard probabilities
  p21 <- exp(lp21) / (1 + exp(lp21) + exp(lp22))
  p22 <- exp(lp22) / (1 + exp(lp21) + exp(lp22))
  p31 <- exp(lp31) / (1 + exp(lp31) + exp(lp32) + exp(lp33))
  p32 <- exp(lp32) / (1 + exp(lp31) + exp(lp32) + exp(lp33))
  p33 <- exp(lp33) / (1 + exp(lp31) + exp(lp32) + exp(lp33))

  
  #  Occupancy matrix Omega 
  for (i in 1:nsites) {
    Omega[i,1] <- 1 - psi[i]                                 # Prob. of unoccupied
    Omega[i,2] <- psi[i] * (1 - (R1[i]))                     # Prob. of occupancy w/o calves
    Omega[i,3] <- psi[i] * R1[i] * (1 - R2[i])               # Prob. of occupancy with 1 calf
    Omega[i,4] <- psi[i] * R1[i] * R2[i]                     # Prob. of occupancy with >1 calves
  }

  # Define observation matrix (Theta)
  # Order of indices: true state, observed state
  Theta[1,1] <- 1
  Theta[1,2] <- 0
  Theta[1,3] <- 0
  Theta[1,4] <- 0
  Theta[2,1] <- 1 - p1
  Theta[2,2] <- p1
  Theta[2,3] <- 0
  Theta[2,4] <- 0
  Theta[3,1] <- 1 - (p21 + p22)
  Theta[3,2] <- p21
  Theta[3,3] <- p22   
  Theta[3,4] <- 0
  Theta[4,1] <- 1 - (p31 + p32 + p33)
  Theta[4,2] <- p31
  Theta[4,3] <- p32
  Theta[4,4] <- p33 

  # Initial latent state modeling 
  for (i in 1:nsites) {
    z[i] ~ dcat(Omega[i,])
  }
  
  # Observation equation
  for (i in 1:nsites) {
    for (j in 1:nsurveys) {
      y[i,j] ~ dcat(Theta[z[i],])
    }
  }  

   
  # Derived quantities
  for (i in 1:nsites) {
    occ1[i] <- equals(z[i], 1)
    occ2[i] <- equals(z[i], 2)
    occ3[i] <- equals(z[i], 3)
    occ4[i] <- equals(z[i], 4)
  }
  n.occ[1] <- sum(occ1[]) # Sites in state 1 (Unoccupied)
  n.occ[2] <- sum(occ2[]) # Sites in state 2 (Occupied w/o calves)
  n.occ[3] <- sum(occ3[]) # Sites in state 3 (Occupied with 1 calf)
  n.occ[4] <- sum(occ4[]) # Sites in state 4 (Occupied with >2 calves)


mean.psi <- mean(psi)
mean.R1 <- mean(R1)
mean.R2 <- mean(R2)
mean.Omega1 <- mean(Omega[,1])
mean.Omega2 <- mean(Omega[,2])
mean.Omega3 <- mean(Omega[,3])
mean.Omega4 <- mean(Omega[,4])
}

